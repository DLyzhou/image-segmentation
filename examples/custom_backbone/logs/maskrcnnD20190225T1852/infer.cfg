[BACKBONE]
	str-BACKBONE = resnet101
	str-BACKBONE_WEIGHTS = None
	tuple-FEATURE_LAYERS = ('stage3_blockw_relu_2c', 'stage2_blockd_relu_2c', 'stage1_blockc_relu_2c', 'activation_1')
[DETECTION]
	list-BBOX_STD_DEV = [0.1, 0.1, 0.2, 0.2]
	int-DETECTION_MAX_INSTANCES = 100
	float-DETECTION_MIN_CONFIDENCE = 0.7
	float-DETECTION_NMS_THRESHOLD = 0.3
[FPN]
	int-FPN_CLASSIF_FC_LAYERS_SIZE = 1024
	int-TOP_DOWN_PYRAMID_SIZE = 256
[HEAD]
	int-MASK_POOL_SIZE = 14
	list-MASK_SHAPE = [28, 28]
	int-MAX_GT_INSTANCES = 100
	int-POOL_SIZE = 7
	float-ROI_POSITIVE_RATIO = 0.33
	int-TRAIN_ROIS_PER_IMAGE = 200
[INPUT]
	list-GPU_IDS = [0]
	int-IMAGES_PER_GPU = 1
	int-IMAGE_SIZE = 1024
	int-NUM_CLASSES = 81
[MODEL]
	str-MODE = inference
	str-MODEL = maskrcnn
[NMS]
	int-POST_NMS_ROIS_INFERENCE = 1000
	int-POST_NMS_ROIS_TRAINING = 2000
	int-PRE_NMS_LIMIT = 6000
[PREPROCESSING]
	tuple-MINI_MASK_SHAPE = (56, 56)
	bool-USE_MINI_MASK = True
[RPN]
	list-BACKBONE_STRIDES = [4, 8, 16, 32, 64]
	list-RPN_ANCHOR_RATIOS = [0.5, 1, 2]
	tuple-RPN_ANCHOR_SCALES = (32, 64, 128, 256, 512)
	int-RPN_ANCHOR_STRIDE = 1
	list-RPN_BBOX_STD_DEV = [0.1, 0.1, 0.2, 0.2]
	float-RPN_NMS_THRESHOLD = 0.7
	int-RPN_TRAIN_ANCHORS_PER_IMAGE = 256
